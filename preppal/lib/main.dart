import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart'; // Import FirebaseAuth
import 'firebase_options.dart'; // Generated by flutterfire configure
import 'screens/login_screen.dart'; // Import LoginScreen
import 'screens/home_screen.dart'; // Import HomeScreen

void main() async { // Make main asynchronous
  WidgetsFlutterBinding.ensureInitialized(); // Ensure Flutter bindings are initialized
  await Firebase.initializeApp( // Initialize Firebase
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'PrepPal', // Updated app title
      theme: ThemeData(
        // Calm Resilience Theme
        primaryColor: const Color(0xFF81B29A), // Primary Accent
        hintColor: const Color(0xFFF2CC8F), // Secondary Accent (used as accentColor)
        scaffoldBackgroundColor: const Color(0xFFFAF0E6), // Warm Neutral - Linen
        colorScheme: ColorScheme.fromSeed(
          seedColor: const Color(0xFF81B29A), // Primary Accent
          primary: const Color(0xFF81B29A),
          secondary: const Color(0xFFF2CC8F),
          background: const Color(0xFFFAF0E6), // Warm Neutral - Linen
          surface: const Color(0xFFF5EBE0), // Warm Neutral - Dutch White
          onPrimary: Colors.white, // Text on primary color
          onSecondary: Colors.black, // Text on secondary color
          onBackground: const Color(0xFF3D405B), // Darker neutral for text
          onSurface: const Color(0xFF3D405B), // Darker neutral for text
          brightness: Brightness.light,
        ),
        appBarTheme: const AppBarTheme(
          backgroundColor: Color(0xFF81B29A), // Primary Accent for AppBar
          foregroundColor: Colors.white, // Text/icons on AppBar
          titleTextStyle: TextStyle(fontFamily: 'Roboto', color: Colors.white, fontSize: 20, fontWeight: FontWeight.bold),
        ),
        buttonTheme: const ButtonThemeData(
          buttonColor: Color(0xFF81B29A), // Primary Accent for buttons
          textTheme: ButtonTextTheme.primary,
        ),
        elevatedButtonTheme: ElevatedButtonThemeData(
          style: ElevatedButton.styleFrom(
            backgroundColor: const Color(0xFF81B29A), // Primary Accent
            foregroundColor: Colors.white, // Text on button
          ),
        ),
        floatingActionButtonTheme: const FloatingActionButtonThemeData(
          backgroundColor: Color(0xFFF2CC8F), // Secondary Accent for FAB
          foregroundColor: Colors.black,
        ),
        textTheme: const TextTheme(
          displayLarge: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
          displayMedium: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
          displaySmall: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
          headlineLarge: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
          headlineMedium: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
          headlineSmall: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
          titleLarge: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
          titleMedium: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
          titleSmall: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
          bodyLarge: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
          bodyMedium: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
          bodySmall: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
          labelLarge: TextStyle(fontFamily: 'Roboto', color: Colors.white, fontWeight: FontWeight.bold), // For ElevatedButton text
          labelMedium: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
          labelSmall: TextStyle(fontFamily: 'Roboto', color: Color(0xFF3D405B)),
        ).apply(
          bodyColor: const Color(0xFF3D405B),
          displayColor: const Color(0xFF3D405B),
        ),
        useMaterial3: true,
      ),
      home: const AuthWrapper(), // Use AuthWrapper as home
    );
  }
}

// AuthWrapper listens to auth state and shows LoginScreen or HomeScreen
class AuthWrapper extends StatelessWidget {
  const AuthWrapper({super.key});

  @override
  Widget build(BuildContext context) {
    return StreamBuilder<User?>(
      stream: FirebaseAuth.instance.authStateChanges(),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return const Scaffold(
            body: Center(child: CircularProgressIndicator()),
          );
        }
        if (snapshot.hasData) {
          return const HomeScreen(); // User is logged in
        }
        return const LoginScreen(); // User is not logged in
      },
    );
  }
}

// Placeholder LoginScreen and HomeScreen classes are now removed.
// They are imported from their respective files in the screens/ directory.
